{"version":3,"file":"dropdown.js","sourceRoot":"","sources":["../../Users/scoope7/ng2-bs-dropdown/tmp/broccoli_type_script_compiler-input_base_path-tiRHx1NV.tmp/0/src/components/dropdown/dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  NgModule,\n  Directive,\n  Component,\n  HostBinding,\n  EventEmitter,\n  Host,\n  Output,\n  ContentChildren,\n  QueryList,\n  ElementRef,\n  Renderer,\n} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@Directive({\n  selector: '.dropdown-item:not(.disabled)',\n})\nexport class DropdownItem {\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer\n  ) {}\n  focus() {\n    this.renderer.invokeElementMethod(this.el.nativeElement, 'focus');\n  }\n}\n\n@Component({\n  selector: '.dropdown',\n  host: {\n    '(touchend)': 'ontouchend($event)',\n    '[class.open]': 'isOpen',\n    '(keydown.escape)': 'handleEscape($event)',\n    '(keydown.ArrowDown)': 'handleArrow($event, 1)',\n    '(keydown.ArrowUp)': 'handleArrow($event, -1)',\n    '(click)': 'handleClick($event)',\n  },\n  template: `\n    <div *ngIf=\"isOpen\"\n         (click)=\"backdropClick($event)\"\n         class=\"dropdown-backdrop\">\n    </div>\n    <ng-content></ng-content>\n  `,\n})\nexport class Dropdown {\n  @ContentChildren(DropdownItem) children: QueryList<DropdownItem>;\n  @Output() open: EventEmitter<any> = new EventEmitter();\n  @Output() close: EventEmitter<any> = new EventEmitter();\n  public isOpen: boolean = false;\n  private focusIndex: number = -1;\n\n  constructor() {\n    this.open.subscribe(() => {\n      this.isOpen = true;\n    });\n    this.close.subscribe(() => {\n      this.isOpen = false;\n    });\n  }\n  backdropClick(event: any) {\n    if (this.isOpen) {\n      this.close.emit(undefined);\n      event.stopPropagation();\n    }\n  }\n  handleClick(event: any) {\n    // not disabled link\n    if (event.target.classList.contains('disabled')) return;\n    // not text area\n    if (/input|textarea/i.test(event.target.tagName)) return;\n    this.close.emit(undefined);\n  }\n  handleEscape(event: any) {\n    if (/input|textarea/i.test(event.target.tagName)) return;\n    if (this.isOpen) {\n      this.close.emit(undefined);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  handleArrow(event: any, move: number) {\n    if (/input|textarea/i.test(event.target.tagName)) return;\n    this.focusIndex += move;\n    let items = this.children.toArray();\n    if (!items.length) {\n      return;\n    }\n    // restrain to available elements\n    if (this.focusIndex > items.length - 1) this.focusIndex = items.length - 1;\n    if (this.focusIndex < 0) this.focusIndex = 0;\n    items[this.focusIndex].focus();\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n\n\n@Directive({\n  selector: '.dropdown-toggle',\n  host: {\n    '(click)': 'setMousedown($event)',\n    '[class.active]': 'dropdown.isOpen',\n    '[attr.aria-haspopup]': 'true',\n  },\n})\nexport class DropdownToggle {\n  constructor(@Host() private dropdown: Dropdown) {}\n  setMousedown(e: any) {\n    // ignore disabled clicks\n    if (e.target.classList.contains('disabled')) return;\n    if (this.dropdown.isOpen) {\n      this.dropdown.close.emit(undefined);\n    } else {\n      this.dropdown.open.emit(undefined);\n    }\n    e.stopPropagation();\n  }\n  @HostBinding('attr.aria-expanded')\n  get isAriaExpanded(): string {\n    return this.dropdown.isOpen ? 'true' : 'false';\n  }\n}\n\nexport const DROPDOWN_DIRECTIVES: Array<any> = [\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n];\n\n@NgModule({\n  imports: [BrowserModule],\n  declarations: DROPDOWN_DIRECTIVES,\n  exports: DROPDOWN_DIRECTIVES,\n})\nexport class BsDropdownModule { }\n"]}